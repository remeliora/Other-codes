#include <iostream>     //стандартная библиотека для работы с функцией int main()
#include <cmath>        //библиотека для работы с математическими преобразованиями
#include <string.h>     //библиотека для работы с функцией string
#include <map>          //библиотека stl для работы с асоциативным контейнером map
#include <stdlib.h>     //библиотека для прекращения работы программы
using namespace std;    //подключается для оптимизации использования стандартных методов языка с++

int main () {           //главная функция программы

    system("chcp 65001");   //
    system("cls");          //используется для корректного отображения кириллицы в терминале

    int len, value = 0, k, s;   //объявление переменных (длина введённого числа, конечное значение, 
                                //система счисления, битовая степень)
    int ConvertMass[10];        //массив для конвертирования введённого числа
    
    string str;                 //строка для ввода нужного числа
    string sent1;               //дополнительная строка для поиска символа по словарю

    char str_char[10];          //символьный массив для записи числа посимвольно

    map <string, int> mp;               //словарь значений
    mp["0"] = 0; mp["1"] = 1; mp["2"] = 2; mp["3"] = 3; mp["4"] = 4; mp["5"] = 5; mp["6"] = 6; mp["7"] = 7;
    mp["8"] = 8; mp["9"] = 9; mp["A"] = 10; mp["B"] = 11; mp["C"] = 12; mp["D"] = 13; mp["E"] = 14;
    mp["F"] = 15; mp["G"] = 16; mp["H"] = 17; mp["I"] = 18; mp["J"] = 19; mp["K"] = 20; mp["L"] = 21;
    mp["M"] = 22; mp["N"] = 23; mp["O"] = 24; mp["P"] = 25; mp["Q"] = 26; mp["R"] = 27; mp["S"] = 28;
    mp["T"] = 29; mp["U"] = 30; mp["V"] = 31; mp["W"] = 32; mp["X"] = 33; mp["Y"] = 34; mp["Z"] = 35;
    map <string, int>::iterator it;     //специальна функция iterator библиотеки map 

    cout << "Введите число которое необходимо преобразовать: ";
    cin >> str;             //ввод числа
    len = str.length();     //нахождение длины введённого числа

    for (int i = 0; i < len; i++) {     //цикл для записи введённого числа посимвольно
        str_char[i] = str[i];           //каждый [i]элемент строки с числом приравнивается 
        //[i]элементу массива str_char[i] (ниже строка для проверки результата данного цикла)
        //cout << endl << "str_char[ " << i << " ] = " << str[i] << endl;
    }
    
    /*for (int i = 0; i < len; i++) {
        if (str[i]>= '0' && str[i] <= '9') {
            s1[top1++] = str[i] - '0';
        }
        else {
            s2[top2++] = str[i];
        }
    }*/
    
    for (int i = 0; i < len; i++) {     //цикл для сравнивания со словарём
        sent1 = str_char[i];    //приравниваем строке sent1 [i]элемент из массива, 
                                //где хранится каждый символ введённого числа

                                //так как ключом в словаре у нас служит переменная типа string,
                                //то и необходимый символ нужно занести в отдельную переменную того же типа
        it = mp.find(sent1);    //сравниваем значение необходимого символа с ключом из словаря
                                //и записываем результат в итератор нашего словаря
        if (it != mp.end()) {       //если итератор не равен концу словаря то:
                                    //(если в словере ключ по символу нашёлся)
            ConvertMass[i] = it->second;    //присваиваем [i]элементу массива значение по найденному ключу
                                            //it->first = ключ, it->second = значение ключа
                        //ниже строка для проверки результата выполнения цикла
            //cout << endl << "ConvertMass[ " << i << " ] = " << ConvertMass[i] << endl;
        }
        else if(it == mp.end()) {
            cout << "Проверьте правильность введённого числа!" << endl;
            cout << "(допускается ввод только чисел от 0 до 9 и заглавных букв англ. алфавита)" << endl;
            exit(EXIT_SUCCESS);
        }
    }

    cout << "Количество символов в числе " << str << " = " << len << endl;
    cout << "Введите необходимую степень счисления: ";
    cin >> k;           //ввод степени счисления
    s = len-1;          //так как это битовая степень, то она должна быть меньше длины числа и считаться с 0

    /*for (int i = 0; i < len; i++) {
        int decimal, binary = 0, remainder, product = 1;
        decimal = ConvertMass[i];
        while (decimal != 0) {
            remainder = decimal % 2;
            binary = binary + (remainder * product);
            decimal = decimal / 2;
            product *= 10;
        }
        ConvertMass[i] = binary; 
    }*/
    
    /*for (int i = 0; i < len; i++) {
        cout << endl << "ConvertMass[ " << i << " ] = " << ConvertMass[i] << endl;
    }*/

    for (int i = 0; i < len; i++) {     //цикл конвертирования
        ConvertMass[i] = ConvertMass[i] * pow(k, s);
        s--;
    }

    for (int i = 0; i < len; i++) {     //цикл складывания элементов массива для конвертирования
        value += ConvertMass[i];
    }
    
    cout << "Число " << str << " в " << k << "-ой системе счисления = " << value << " в 10-ой системе счисления" << endl; 
                                //вывод результата
    return 0;
}